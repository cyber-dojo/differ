name: Sub - deploy to aws-prod

on:
  workflow_call:
    inputs:
      IMAGE_TAG:
        required: true
        type: string
      KOSLI_ORG:
        required: true
        type: string
      KOSLI_FLOW:
        required: true
        type: string
      KOSLI_TRAIL:
        required: true
        type: string
      KOSLI_HOST:
        required: true
        type: string
      KOSLI_HOST_STAGING:
        required: true
        type: string
    secrets:
      KOSLI_API_TOKEN_STAGING:
        required: true
      KOSLI_API_TOKEN:
        required: true


env:
  KOSLI_ORG: ${{ inputs.KOSLI_ORG }}

jobs:

  variables:
    runs-on: ubuntu-latest
    outputs:
      flow_name: ${{ steps.vars.outputs.flow_name }}
      image_tag: ${{ steps.vars.outputs.image_tag }}
      aws_account_id: ${{ steps.vars.outputs.aws_account_id }}
      ecr_registry: ${{ steps.vars.outputs.ecr_registry }}
      aws_region: ${{ steps.vars.outputs.aws_region }}
      gh_actions_iam_role_name: ${{ steps.vars.outputs.gh_actions_iam_role_name }}
    steps:
    - name: Prepare outputs for fivexl deployment workflow
      id: vars
      run: |
        echo "flow_name=${{ inputs.KOSLI_FLOW }}"                           >> ${GITHUB_OUTPUT}        
        echo "image_tag=${{ inputs.IMAGE_TAG }}"                            >> ${GITHUB_OUTPUT}
        echo "aws_account_id=274425519734"                                  >> ${GITHUB_OUTPUT}
        echo "ecr_registry=274425519734.dkr.ecr.eu-central-1.amazonaws.com" >> ${GITHUB_OUTPUT}
        echo "aws_region=eu-central-1"                                      >> ${GITHUB_OUTPUT}
        echo "gh_actions_iam_role_name=gh_actions_services"                 >> ${GITHUB_OUTPUT}

  push-image-to-prod-ecr:
    needs: [variables]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ needs.variables.outputs.aws_region }}
          role-duration-seconds: 2400
          role-session-name: ${{ github.event.repository.name }}
          role-to-assume: arn:aws:iam::${{ needs.variables.outputs.aws_account_id }}:role/${{ needs.variables.outputs.gh_actions_iam_role_name }}

      - name: Login to Amazon ECR (Elastic Container Registry)
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push image to private prod-ECR
        run: |
          PUBLIC_IMAGE_NAME=cyberdojo/differ:${{ inputs.IMAGE_TAG }}
          PRIVATE_IMAGE_NAME=${{ needs.variables.outputs.ecr_registry }}/differ:${{ inputs.IMAGE_TAG }}
          docker pull ${PUBLIC_IMAGE_NAME}
          docker tag ${PUBLIC_IMAGE_NAME} ${PRIVATE_IMAGE_NAME}
          docker push ${PRIVATE_IMAGE_NAME}

  deploy-to-aws-prod:
    needs: [variables, push-image-to-prod-ecr]
    permissions:
      id-token: write
      contents: write
    uses: fivexl/gh-workflow-tf-plan-apply/.github/workflows/base.yml@v0.0.7
    with:
      aws_region: ${{ needs.variables.outputs.aws_region }}
      aws_role_arn: arn:aws:iam::${{ needs.variables.outputs.aws_account_id }}:role/${{ needs.variables.outputs.gh_actions_iam_role_name }}
      aws_default_region: ${{ needs.variables.outputs.aws_region }}
      aws_role_duration: 900
      working_directory: deployment/terraform/
      tf_apply: 'true'
      tf_version: v1.4.5
      tf_additional_env_vars: '{"TF_VAR_TAGGED_IMAGE": "${{ needs.variables.outputs.ecr_registry }}/${{ needs.variables.outputs.flow_name }}:${{ needs.variables.outputs.image_tag }}"}'
