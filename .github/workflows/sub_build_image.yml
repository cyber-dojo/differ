name: Sub - build image

on:
  workflow_call:
    secrets:
      KOSLI_API_TOKEN:
        required: true
      DOCKER_PASS:
        required: true
      DOCKER_USER:
        required: true
    inputs:
      KOSLI_DRY_RUN:
        required: true
        type: string
      KOSLI_HOST:
        required: true
        type: string
      KOSLI_CLI_VERSION:
        required: true
        type: string
      KOSLI_ORG:
        required: true
        type: string
      KOSLI_FLOW:
        required: true
        type: string
      IMAGE_TAG:
        required: true
        type: string

env:
  KOSLI_DRY_RUN: ${{ inputs.KOSLI_DRY_RUN }}
  KOSLI_CLI_VERSION: ${{ inputs.KOSLI_CLI_VERSION }}
  KOSLI_HOST: ${{ inputs.KOSLI_HOST }}
  KOSLI_ORG: ${{ inputs.KOSLI_ORG }}
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  KOSLI_FLOW: ${{ inputs.KOSLI_FLOW }}
  IMAGE_TAG: ${{ inputs.IMAGE_TAG }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push image to Dockerhub ECR
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: "cyberdojo/${{ env.KOSLI_FLOW }}:${{ env.IMAGE_TAG }}"
          build-args:
            COMMIT_SHA=${{ github.sha }}

#      - name: Build
#        run:
#          ./sh/build.sh
#
#      - name: Push image to public registry (dockerhub)
#        run:
#          docker push cyberdojo/differ:${{ env. IMAGE_TAG }}

      - name: Setup Kosli CLI
        uses: kosli-dev/setup-cli-action@v2
        with:
          version:
            ${{ env.KOSLI_CLI_VERSION }}

      - name: Report image to Kosli flow
        run: |
          docker pull cyberdojo/differ:${{ env.IMAGE_TAG }}          
          kosli report artifact cyberdojo/differ:${{ env.IMAGE_TAG }} \
            --artifact-type=docker
